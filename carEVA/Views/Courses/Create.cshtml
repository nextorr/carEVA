@model carEVA.ViewModels.CoursesViewModels

@{
    ViewBag.Title = "Crear";
}

@if (!ViewBag.isExternal)
{
    <h2>Crear Curso Interno</h2>
}
else
{
    <h2>Crear Curso Externos</h2>
}

<p>Cree un curso agregando una Descripcion y un titulo, luego podra editarlo para agregar Lecciones</p>



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.organizationInfo.creationDate, htmlAttributes: new { @class = "evaCreationDate" })
        @*@Html.Hidden("creationDate", DateTime.Now, new {@class = "evaCreationDate" })*@
        <div class="form-group">
            @Html.LabelFor(model => model.course.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.course.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.course.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.course.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.course.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.course.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.course.commitmentDays, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.course.commitmentDays, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.course.commitmentDays, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.course.commitmentHoursPerDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.course.commitmentHoursPerDay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.course.commitmentHoursPerDay, "", new { @class = "text-danger" })
            </div>
        </div>

        @* organization course related information fields *@

        <div class="form-group">
            @Html.LabelFor(model => model.organizationInfo.originArea, "Area de Origen",htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("organizationInfo.originAreaID", (SelectList)ViewBag.originAreaID, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.organizationInfo.originArea, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.organizationInfo.required, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.organizationInfo.required, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.organizationInfo.required, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.organizationInfo.deadline, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.organizationInfo.deadline, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.organizationInfo.deadline, "", new { @class = "text-danger" })
            </div>
        </div>

        @* the idea here is a control that allows me to select the autorized areas to view the course *@
        @*<div class="form-group">
            @Html.LabelFor(model => model.organizationInfo.colaborators, "Areas Autorizadas", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("organizationInfo.originAreaID", (SelectList)ViewBag.originAreaID, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.organizationInfo.originArea, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Ir a lista de cursos", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval");

<script type="text/javascript">
    $(function () {
        var today = new Date();
        var dd = today.getDate();
        var MM = today.getMonth() + 1; //January is 0!
        var hh = today.getHours();
        var mm = today.getMinutes();
        var ss = today.getSeconds();

        var yyyy = today.getFullYear();
        //formating: add a preceding 0 for values less than 10
        dd = dd < 10 ? '0' + dd : dd;
        MM = MM < 10 ? '0' + MM : MM;
        hh = hh < 10 ? '0' + hh : hh;
        mm = mm < 10 ? '0' + mm : mm;
        ss = ss < 10 ? '0' + ss : ss;

        var today = dd + '/' + MM + '/' + yyyy + ' '+ hh + ':' + mm + ':' + ss;
        $('.evaCreationDate').val(today);
        console.log(today);
    })
</script>
}



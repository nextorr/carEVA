@model carEVA.Models.Course

@{
    ViewBag.Title = "Editar";
}

<h2>Editar informacion del curso</h2>
<p>Edite la informacion basica del curso en esta pagina, para agregar informacion al curso como capitulos y lecciones
    haga clck en el boton de Agregar Capitulo</p>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CourseID)
        @Html.HiddenFor(model => model.evaImageID)
        @Html.HiddenFor(model => model.totalLessons)
        @Html.HiddenFor(model => model.totalQuizes)

        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.commitmentDays, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.commitmentDays, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.commitmentDays, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.commitmentHoursPerDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.commitmentHoursPerDay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.commitmentHoursPerDay, "", new { @class = "text-danger" })
            </div>
        </div>

        @* for this related information, the controller is making sure ONLY ONE result is sent here, so we are safe that firstOrDefalut contains
        the correct data *@

        <div class="form-group">
            @Html.LabelFor(model => model.organizationCourse.FirstOrDefault().originAreaID, "Area de Origen", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("originAreaID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.organizationCourse.FirstOrDefault().originAreaID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.organizationCourse.FirstOrDefault().creationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.organizationCourse.FirstOrDefault().creationDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.organizationCourse.FirstOrDefault().required, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.organizationCourse.FirstOrDefault().required, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.organizationCourse.FirstOrDefault().required, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.organizationCourse.FirstOrDefault().deadline, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.organizationCourse.FirstOrDefault().deadline, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.organizationCourse.FirstOrDefault().deadline, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Ir a lista de cursos", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
